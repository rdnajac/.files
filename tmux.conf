# vim:fdm=marker
set -g mouse on
bind-key r run-shell " \
        tmux source-file ~/.tmux.conf > /dev/null; \
        tmux display-message 'sourced ~/.tmux.conf!'"

set-option -g prefix2 C-a  # why not both?
bind | split-window -h     # split panes horizontally
bind - split-window -v     # split panes vertically
bind C-u send-keys C-u
bind C-a last-window
bind '\' setw synchronize-panes
bind i set-option status
#bind Tab choose-tree -Z

# function toggle_panes() {
#     if [ $(tmux list-panes | wc -l) -eq 2 ]; then
#         tmux swap-pane -s :.0
#     else
#         tmux display 'Not enough panes'
#     fi
# }
# bind S run-shell "toggle_panes"

# TODO üçù
set -g default-terminal "tmux-256color"
set -as terminal-features ",alacritty*:RGB"
#set-option -sa terminal-overrides ',xterm-256color:RGB'
set-option -ga terminal-overrides ",alacritty:Tc"

#set-window-option -g mode-keys vi
#set -g status-keys emacs

# colors {{{1
set -g status-style fg=white,bg=black
#set -g pane-active-border-style 'fg=colour250'
#set -g pane-border-style 'fg=colour235'
set -g window-style 'bg=#16161d'
set -g window-active-style 'bg=#000000'

# resize panes with shift+arrow {{{1
bind -n S-Up resize-pane -U 5
bind -n S-Down resize-pane -D 5
bind -n S-Left resize-pane -L 5
bind -n S-Right resize-pane -R 5

# boring stuff {{{1
set -g bell-action none
set -g focus-events on
set -g visual-activity on
set -g monitor-activity on
# stuff we don't want the mouse doing {{{1
unbind -n MouseDrag1Pane
unbind -Tcopy-mode MouseDrag1Pane
# "sensible" options  {{{1
# https://github.com/tmux-plugins/tmux-sensible
set -s escape-time 69       # address vim mode switching delay (but don't set to 0
set -g history-limit 50000  # increase scrollback buffer size
set -g display-time 4000    # tmux messages are displayed for 4 seconds
set -g status-interval 5    # refresh 'status-left' and 'status-right' more often

# TODO what?
# required (only) on OS X
#set -g default-command "reattach-to-user-namespace -l $SHELL"

# TODO does this even work?
# see: https://unix.stackexchange.com/questions/622210/tmux-how-to-always-resize-all-windows-to-maximum-available-size
set-window-option -g aggressive-resize on

# TODO see if this conflicts with vim mappings (ie YCM)
# easier switching between next/prev window
bind-key C-p previous-window
bind-key C-n next-window

# smart pane switching with awareness of vim splits {{{1
# https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
# }}} 1
