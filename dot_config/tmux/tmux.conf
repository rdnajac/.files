set-environment -g TMUX_HOME "$HOME/.config/tmux"
set-environment -g PATH "$PATH:$TMUX_HOME/bin"
# HACK: Set the environment variable to the current file to access it with tmux format
set-environment -Fhg config_file "#{current_file}"
bind r source-file -F "#{config_file}" \; display-message "Reloaded #{config_file}!"

source-file "$HOME/.config/tmux/navigator.conf"
source-file "$HOME/.config/tmux/copy.conf"
# source-file "$HOME/.config/tmux/statusbar.conf"

set -s escape-time 69
set -g bell-action none
set -g focus-events on
set -g visual-activity on
set -g monitor-activity on
set -g history-limit 42069
set -g mouse on
# unbind -n MouseDrag1Pane
unbind -Tcopy-mode MouseDrag1Pane

set -g prefix2 C-f
bind f send-prefix
bind b send-prefix
bind | split-window -h     # split panes horizontally `"`
bind - split-window -v     # split panes vertically `%`
bind Tab next-window       # cycle through windows
bind i set status          # toggle status bar
unbind n
bind n new-window

# resize panes with prefix + arrow
bind -r Up resize-pane -U 5
bind -r Down resize-pane -D 5
bind -r Left resize-pane -L 5
bind -r Right resize-pane -R 5

bind S set-window-option synchronize-panes\; display-message "\
synchronize-panes = #{?pane_synchronized,on,off}"

if-shell "uname | grep -q Darwin" {
  #set -g default-command "reattach-to-user-namespace -l $SHELL"
  bind-key -T copy-mode-vi 'y'    send -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy'
  bind-key -T copy-mode-vi Enter  send -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy'
}

set -g status "on"
set-option -g status-position top
# PERF:
set -g status-interval 1
set -g mode-style "bg=#7aa2f7,fg=#3b4261"
set -g message-style "bg=#7aa2f7,fg=#3b4261"
set -g message-command-style "fg=#7aa2f7,bg=#3b4261"
set -g pane-border-style "fg=#3b4261"
set -g pane-active-border-style "fg=#7aa2f7"
set -g status-justify "left"
set -g status-style "fg=#7aa2f7,bg=default"

set -g status-left-length "100"
set -g status-right-length "100"


# set -g status-left '#(status-left")'
# set -g status-left '#(nvr.sh "TmuxLeft()" || echo "#[fg=#7aa2f7,bg=#3b4261,bold] 󰘳 #{pane_current_command}")'
# set -g status-right '#(status-right")'

set -g status-left-style NONE
set -g status-left ""
set -g status-left '#(~/.local/bin/nvim --headless --noplugin --server "${XDG_RUNTIME_DIR:-/tmp}/nvim.pipe" --remote-expr "TmuxLeft()")'
set -ga status-right "#{?#{==:#{server_sessions},1},,#[fg=#15161e,bg=#7aa2f7,bold] Sesh:#S }"
set -ga status-right "#{?#{==:#{session_windows},1},,#[fg=#15161e,bg=#7aa2f7,bold] Win:#I }"
set -ga status-right "#{?#{==:#{window_panes},1},,#[fg=#15161e,bg=#7aa2f7,bold] Pane:#P }"
# set -ga status-left "#[fg=#7aa2f7,bg=#3b4261,nobold,nounderscore,noitalics] "
# # set -ga status-left "#[fg=#7aa2f7,bg=#3b4261,nobold,nounderscore,noitalics]  "
# set -ga status-left "#[fg=#7aa2f7,bg=#3b4261,bold]  #(nvim-tmux.sh)"
#
# setw -g window-status-separator ""
setw -g window-status-style "NONE,fg=#a9b1d6,bg=default"
setw -g window-status-format "#[fg=#a9b1d6,bg=default] #I:#P:#W [#F]"
setw -g window-status-activity-style "underscore,fg=#e0af68,bg=default"
setw -g window-status-current-format "#[fg=#FFFFFF,bg=#3b4261,bold] [#F] #[fg=#3b4261,bg=default,nobold,nounderscore,noitalics]"
setw -g window-status-current-format ""
# setw -g window-status-last-style "bold,fg=#f7768e,bg=default"

set -g status-right-style NONE
set -g status-right ""
set -g status-right '#(~/.local/bin/nvim --headless --noplugin --server "${XDG_RUNTIME_DIR:-/tmp}/nvim.pipe" --remote-expr "TmuxRight()")'
# set -ga status-right "#[fg=#15161e,bg=#7aa2f7,bold]  %U:%a   %s \ "

# TODO
# send nvr the status bar so it can be updated and returned with chroma colors
# tmux display-message -p "#{status-left}"
# tmux display-message -p "#{status-right}"
