{
  "cd0": {
    "prefix": "cdhere",
    "body": "cd \"\\$(dirname \"\\$0\")\" || exit 1",
    "description": "Change to the script's directory."
  },

  "safe": {
    "prefix": "set",
    "body": "set -eux\n\n",
    "description": "Set the shell to exit on error, unset variables, and print each command."
  },

  "for": {
    "prefix": "for",
    "body": "for ${1:VAR} in ${2:LIST}\ndo\n\t${3:echo} \"\\$${1:VAR}\"\ndone\n",
    "description": "for loop"
  },

  "echo": {
    "prefix": "echo",
    "body": "echo \"${0:message}\"",
    "description": "Echo a message."
  },

  "read": {
    "prefix": "read",
    "body": "read -r ${0:VAR}",
    "description": "Read input of ${VAR}."
  },
  "if": {
    "prefix": "if",
    "body": "if [[ ${1:condition} ]]; then\n\t${0}\nfi",
    "description": "An IF statement."
  },
  "elseif": {
    "prefix": "elseif",
    "body": "elif [[ ${1:condition} ]]; then\n\t${0}",
    "description": "Add an elseif to an if statement."
  },
  "else": {
    "prefix": "else",
    "body": "else\n\t${0:command}",
    "description": "else"
  },

  "function": {
    "prefix": "function",
    "body": "${1:name} ()\n{\n\t${0}\n}",
    "description": [
      "This defines a function named name.\n",
      "The reserved word function is optional.\n",
      "If the function reserved word is supplied, the parentheses are optional.\n",
      "1. Recommended way:\n",
      "name() {}\n",
      "2. C-like-way:\nfunction name [()] {}"
    ]
  },
  "case": {
    "prefix": "case",
    "body": "case \"\\$${1:VAR}\" in\n\t${2:1}) echo 1\n\t;;\n\t${3:2|3}) echo 2 or 3\n\t;;\n\t*) echo default\n\t;;\nesac\n",
    "description": [
      "case word in [ [(] pattern [ | pattern ] ... ) list ;; ] ... esac\n",
      "A case command first expands word, and tries to match it against each pattern in turn."
    ]
  },
  "comment": {
    "prefix": "doc",
    "body": [
      "#######################################",
      "# ${1:Description of the function.}$0",
      "# Globals:",
      "#   ${3:MY_VAR}",
      "# Arguments:",
      "#   ${4:None}",
      "# Outputs:",
      "#   ${5:Output to STDOUT or STDERR.}",
      "# Returns:",
      "#   ${2: Description of the returned value.}",
      "#######################################"
    ],
    "description": "A shell comment block for functions, including description, globals, arguments, outputs, and returns. For functions without I/O, use the simple version of this snippet instead.\n\nYou can delete 'Globals'/'Arguments'/'Outputs' in functions with no input/output.\n\nIt doesn't includes, but accepts the optional keywords:\n  'See'\n  'Raises'"
  }
}
